---
apiVersion: v1
kind: ConfigMap
metadata:
  name: crio-self-signed-registry-configurator
data:
  registries.conf: |
    [[registry]]
      prefix = "registry.k8scourse.serics.eu"
      location = "registry.k8scourse.serics.eu"
      insecure = true
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: crio-self-signed-registry-configurator
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: crio-self-signed-registry-configurator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: crio-self-signed-registry-configurator
    spec:
      hostPID: true
      initContainers:
        - name: copy-configuration
          image: public.ecr.aws/docker/library/alpine:latest
          command:
            - /bin/sh
            - -c
            - cp -f /configs/registries.conf /host/etc/containers/registries.conf.d/registry.k8scourse.serics.eu.conf
          volumeMounts:
            - name: configs
              mountPath: /configs
            - name: registries-conf-d
              mountPath: /host/etc/containers/registries.conf.d
        - name: restart-crio
          image: public.ecr.aws/docker/library/alpine:latest
          command:
            - /bin/sh
            - -c
            - |-
              if pidof crio; then
                echo "Restarting crio..."
                kill -HUP $(pidof crio)
                echo "crio restarted"
              else
                echo "crio not running, skipping restart"
              fi
          securityContext:
            privileged: true
      containers:
        - name: crio-self-signed-registry-configurator
          image: public.ecr.aws/docker/library/alpine:latest
          command:
            - /bin/sh
            - -c
            - while true; do sleep 10; done
      volumes:
        - name: configs
          configMap:
            name: crio-self-signed-registry-configurator
        - name: registries-conf-d
          hostPath:
            path: /etc/containers/registries.conf.d
            type: DirectoryOrCreate
